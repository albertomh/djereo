# {{project_name}} developer README

## Develop

### The runserver recipe

The `runserver` just recipe is the main command to call when developing {{project_name}}.
It installs dependencies and the application (in editable mode) in a virtual environment,
then invokes Django's `runserver` using Python in [Development Mode](https://docs.python.org/3/library/devmode.html).
Python's Dev Mode will show warnings (Deprecation, Import, Resource) that are otherwise hidden.

### Use project metadata in the running application

`{{project_name}}/__init__.py` exposes project metadata such as version and author information.
To use it in a view:
```python

from django.http import HttpResponse

from {{project_name}} import __version__


def view(request):
    return HttpResponse(f"{{project_name}} v{__version__}")
```

### Use IPython as your shell

`IPython`, an improved Python shell, is installed as a development dependency. Django picks
it up by default and uses it instead of the default Python shell.
To use `IPython` run `manage.py shell` or the `just shell` recipe.

By default IPython's debugger (`ipdb`) will launch when a `breakpoint()` is reached while
running the application.
`ipdb` is also used to debug tests and will launch when a test fails.

---

&copy; {{author_name}}
